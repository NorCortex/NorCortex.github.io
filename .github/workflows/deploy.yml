name: Deploy Next.js site to Pages

on:
  push:
    branches:
      - main
      - feature/**
      - fix/**
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact_path: ${{ steps.upload_artifact.outputs.artifact_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Add .nojekyll
        run: touch out/.nojekyll

      - name: Upload artifact
        id: upload_artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Production deployment on main
  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages (Production)
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          # This publishes your main branch build to the root of gh-pages
          publish_branch: gh-pages
          publish_dir: out
          clean: true

  # Preview deployment on feature/ or fix/
  deploy-preview:
    if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/fix/')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-pages-artifact@v1
        with:
          path: out

      # Clean up the branch name so we can use it as a folder (replace slashes with dashes).
      - name: Prepare preview folder
        run: |
          BRANCH_NAME="${GITHUB_REF_NAME//\//-}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          mv out "out-$BRANCH_NAME"

      - name: Deploy to GitHub Pages (Preview)
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          publish_branch: gh-pages
          # Publish to a subfolder, e.g. gh-pages/feature-xyz
          publish_dir: "out-${{ env.BRANCH_NAME }}"
          clean: false  # don't wipe out the entire gh-pages branch

      - name: Show preview URL
        run: |
          echo "Preview URL: https://<YOUR_GITHUB_USERNAME>.github.io/<REPO_NAME>/out-${{ env.BRANCH_NAME }}/"
